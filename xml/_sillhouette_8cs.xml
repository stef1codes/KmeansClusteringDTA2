<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="_sillhouette_8cs" kind="file" language="C#">
    <compoundname>Sillhouette.cs</compoundname>
    <innerclass refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_sillhouette" prot="public">StefanSchmeltzKmeansClusteringDTA02::Sillhouette</innerclass>
    <innernamespace refid="namespace_stefan_schmeltz_kmeans_clustering_d_t_a02">StefanSchmeltzKmeansClusteringDTA02</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Collections.Generic;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Linq;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_stefan_schmeltz_kmeans_clustering_d_t_a02" kindref="compound">StefanSchmeltzKmeansClusteringDTA02</ref>.<ref refid="namespace_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_distance" kindref="compound">Distance</ref>;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_stefan_schmeltz_kmeans_clustering_d_t_a02" kindref="compound">StefanSchmeltzKmeansClusteringDTA02</ref>.<ref refid="namespace_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_read_data" kindref="compound">ReadData</ref>;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_stefan_schmeltz_kmeans_clustering_d_t_a02" kindref="compound">StefanSchmeltzKmeansClusteringDTA02</ref>.<ref refid="namespace_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_read_data" kindref="compound">ReadData</ref>.<ref refid="namespace_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_read_data_1_1_vector" kindref="compound">Vector</ref>;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_stefan_schmeltz_kmeans_clustering_d_t_a02" kindref="compound">StefanSchmeltzKmeansClusteringDTA02</ref></highlight></codeline>
<codeline lineno="9"><highlight class="normal">{</highlight></codeline>
<codeline lineno="10" refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_sillhouette" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_sillhouette" kindref="compound">Sillhouette</ref></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="12" refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_sillhouette_1a131f009078c360f0807904dda18f0048" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>List&lt;Centroid&gt;<sp/><ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_sillhouette_1a131f009078c360f0807904dda18f0048" kindref="member">KmeansCentroids</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="13" refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_sillhouette_1af38bb0ba71c65e63f387254857a48ce5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>List&lt;Point&gt;<sp/><ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_sillhouette_1af38bb0ba71c65e63f387254857a48ce5" kindref="member">Data</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/><ref refid="interface_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_distance_1_1_i_distance" kindref="compound">IDistance</ref><sp/>distanceType;</highlight></codeline>
<codeline lineno="15" refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_sillhouette_1a6c34366f4f178de057d069cda1d567d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_sillhouette_1a6c34366f4f178de057d069cda1d567d2" kindref="member">AGVSillouette</ref>;</highlight></codeline>
<codeline lineno="16" refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_sillhouette_1ab21ef51218b8a622d27881256a3d5aa5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Dictionary&lt;int,<sp/>Dictionary&lt;int,<sp/>double&gt;&gt;<sp/><ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_sillhouette_1ab21ef51218b8a622d27881256a3d5aa5" kindref="member">Distance_Matrix</ref><sp/>{<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">;<sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">;<sp/>}<sp/>=</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Dictionary&lt;int,<sp/>Dictionary&lt;int,<sp/>double&gt;&gt;();</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_sillhouette_1a1ee1593ebb79f95d17cd90a5f4e0cedc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_sillhouette_1a1ee1593ebb79f95d17cd90a5f4e0cedc" kindref="member">Sillhouette</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="20" refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_sillhouette_1a1554f4bc8d3e6ba278900de0609e1603" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_sillhouette_1a1554f4bc8d3e6ba278900de0609e1603" kindref="member">Sillhouette</ref>(List&lt;Centroid&gt;<sp/>kmeansCentroids,<sp/>List&lt;Point&gt;<sp/>data,<sp/><ref refid="interface_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_distance_1_1_i_distance" kindref="compound">IDistance</ref><sp/>distanceType)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_sillhouette_1a131f009078c360f0807904dda18f0048" kindref="member">KmeansCentroids</ref><sp/>=<sp/>kmeansCentroids;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_sillhouette_1af38bb0ba71c65e63f387254857a48ce5" kindref="member">Data</ref><sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.distanceType<sp/>=<sp/>distanceType;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_sillhouette_1abf791e8a26b56da5237d8040d58abe90" kindref="member">DistanceMatrix</ref>(data);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SilhouetteCalculation(<ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_sillhouette_1a131f009078c360f0807904dda18f0048" kindref="member">KmeansCentroids</ref>);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_sillhouette_1abf791e8a26b56da5237d8040d58abe90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_sillhouette_1abf791e8a26b56da5237d8040d58abe90" kindref="member">DistanceMatrix</ref>(List&lt;Point&gt;<sp/>points){</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(var<sp/>customer<sp/>=<sp/>0;<sp/>customer<sp/>&lt;<sp/>points.Count;<sp/>customer++){</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>dist_other_customers<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Dictionary&lt;int,<sp/>double&gt;();<sp/></highlight><highlight class="comment">//a<sp/>list<sp/>to<sp/>add<sp/>the<sp/>distance<sp/>between<sp/>the<sp/>customer<sp/>i<sp/>and<sp/>customer<sp/>j</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(var<sp/>other_customer<sp/>=<sp/>customer<sp/>+<sp/>1;<sp/>other_customer<sp/>&lt;<sp/>points.Count;<sp/>other_customer++)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//calculate<sp/>the<sp/>distance<sp/>between<sp/>customer<sp/>i<sp/>and<sp/>all<sp/>the<sp/>customers<sp/>j.<sp/>except<sp/>where<sp/>a&gt;<sp/>b<sp/>&amp;<sp/>b<sp/>&gt;<sp/>a<sp/>in<sp/>order<sp/>to<sp/>avoid<sp/>duplicate<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>distance<sp/>=<sp/>distanceType.<ref refid="interface_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_distance_1_1_i_distance_1a9968f0bc12e81f582ddd20774a3071d1" kindref="member">Distance</ref>(points[customer].<ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_sillhouette_1af38bb0ba71c65e63f387254857a48ce5" kindref="member">Data</ref>,<sp/>points[other_customer].<ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_sillhouette_1af38bb0ba71c65e63f387254857a48ce5" kindref="member">Data</ref>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist_other_customers.Add(other_customer,<sp/>distance);<sp/><sp/></highlight><highlight class="comment">//Add<sp/>the<sp/>current<sp/>customer<sp/>i<sp/>and<sp/>the<sp/>distance<sp/>between<sp/>customer<sp/>i<sp/>and<sp/>customer<sp/>j<sp/>to<sp/>this<sp/>list.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_sillhouette_1ab21ef51218b8a622d27881256a3d5aa5" kindref="member">Distance_Matrix</ref>.Add(customer,<sp/>dist_other_customers);<sp/><sp/></highlight><highlight class="comment">//add<sp/>the<sp/>result<sp/>of<sp/>all<sp/>the<sp/>distance<sp/>between<sp/>the<sp/>customers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//function<sp/>that<sp/>returns<sp/>the<sp/>average<sp/>of<sp/>the<sp/>sillouette</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SilhouetteCalculation(List&lt;Centroid&gt;<sp/>kmeansCentroids)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>listCohesianSeperation<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>List&lt;Tuple&lt;double,<sp/>double&gt;&gt;();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//foreach<sp/>centroid<sp/>calculate<sp/>the<sp/>cohesion<sp/>and<sp/>seperation<sp/>and<sp/>appendthe<sp/>results<sp/>to<sp/>a<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kmeansCentroids.ForEach(cluster<sp/>=&gt;<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cohension(cluster);<sp/></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Seperation(cluster);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>the<sp/>sillhouette<sp/>for<sp/>each<sp/>customer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kmeansCentroids.ForEach(x<sp/>=&gt;<sp/>x.cluster.ForEach(cust<sp/>=&gt;<sp/>cust.calculateSilhouette()));<sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>sillhouettes<sp/>of<sp/>every<sp/>customer<sp/><sp/>are<sp/>sbeing<sp/>summed<sp/>and<sp/>divided<sp/>by<sp/>the<sp/>amount<sp/>of<sp/>customers<sp/>to<sp/>obtain<sp/>the<sp/>average<sp/>Silhouette.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>sumSilouettte<sp/>=<sp/><ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_sillhouette_1a131f009078c360f0807904dda18f0048" kindref="member">KmeansCentroids</ref>.Select(cluster<sp/>=&gt;<sp/>cluster.cluster.Select(cust<sp/>=&gt;<sp/>cust.customerSillhouette).Sum()).Sum();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_sillhouette_1a6c34366f4f178de057d069cda1d567d2" kindref="member">AGVSillouette</ref><sp/>=<sp/>sumSilouettte<sp/>/<sp/><ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_sillhouette_1af38bb0ba71c65e63f387254857a48ce5" kindref="member">Data</ref>.Count();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Cohension(<ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_read_data_1_1_vector_1_1_centroid" kindref="compound">Centroid</ref><sp/>centroid){</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(var<sp/>customer<sp/>=<sp/>0;<sp/>customer<sp/>&lt;<sp/>centroid.<ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_read_data_1_1_vector_1_1_centroid_1aff63e4a4aaf79b648868b8afea3e410e" kindref="member">cluster</ref>.Count;<sp/>customer++){</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sumdistance<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//accumulator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(var<sp/>otherCustomer<sp/>=<sp/>customer<sp/>+<sp/>1;<sp/>otherCustomer<sp/>&lt;<sp/>centroid.<ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_read_data_1_1_vector_1_1_centroid_1aff63e4a4aaf79b648868b8afea3e410e" kindref="member">cluster</ref>.Count;<sp/>otherCustomer++){</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>the<sp/>amount<sp/>of<sp/>customers<sp/>minus<sp/>the<sp/>target<sp/>customer<sp/>find<sp/>the<sp/>distance<sp/>between<sp/>the<sp/>target<sp/>customer<sp/>and<sp/>all<sp/>other<sp/>customers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumdistance<sp/>+=<sp/><ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_sillhouette_1ab21ef51218b8a622d27881256a3d5aa5" kindref="member">Distance_Matrix</ref>[centroid.<ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_read_data_1_1_vector_1_1_centroid_1aff63e4a4aaf79b648868b8afea3e410e" kindref="member">cluster</ref>[customer].CustomerId]</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[centroid.<ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_read_data_1_1_vector_1_1_centroid_1aff63e4a4aaf79b648868b8afea3e410e" kindref="member">cluster</ref>[otherCustomer<sp/>].CustomerId];<sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>calculate<sp/>the<sp/>cohesion<sp/>and<sp/>add<sp/>it<sp/>unto<sp/>the<sp/>list<sp/>of<sp/>mean<sp/>of<sp/>the<sp/>target<sp/>customer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centroid.<ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_read_data_1_1_vector_1_1_centroid_1aff63e4a4aaf79b648868b8afea3e410e" kindref="member">cluster</ref>[customer].MeanMyCluster<sp/>=<sp/>sumdistance<sp/>/<sp/>(centroid.<ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_read_data_1_1_vector_1_1_centroid_1aff63e4a4aaf79b648868b8afea3e410e" kindref="member">cluster</ref>.Count-1);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Seperation(<ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_read_data_1_1_vector_1_1_centroid" kindref="compound">Centroid</ref><sp/>centroid){</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>filter<sp/><sp/>out<sp/>the<sp/>cluster<sp/>which<sp/>has<sp/>customers<sp/>with<sp/>identical<sp/>id<sp/><sp/>as<sp/>that<sp/>of<sp/>the<sp/>centroid<sp/>which<sp/>we<sp/>want<sp/>to<sp/>calculate<sp/>the<sp/>distance<sp/>with.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>List&lt;Centroid&gt;<sp/>tempCentroidList<sp/>=<sp/>(<ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_sillhouette_1a131f009078c360f0807904dda18f0048" kindref="member">KmeansCentroids</ref>.Where(c<sp/>=&gt;<sp/>c.Id<sp/>!=<sp/>centroid.<ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_read_data_1_1_vector_1_1_centroid_1ad8ae2b988e8b361ee83a69a5d71a8c27" kindref="member">Id</ref>)).ToList();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>tempCentroidList.Count;<sp/>i++){</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>customer<sp/>=<sp/>0;<sp/>customer<sp/>&lt;<sp/>centroid.<ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_read_data_1_1_vector_1_1_centroid_1aff63e4a4aaf79b648868b8afea3e410e" kindref="member">cluster</ref>.Count;<sp/>customer++){</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sumdistance<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>accumulator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>other_customer<sp/>=<sp/>0;<sp/>other_customer<sp/>&lt;<sp/>tempCentroidList[i].cluster.Count;<sp/>other_customer++){<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tempCentroidList[i].cluster[other_customer].CustomerId<sp/>&lt;<sp/>centroid.<ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_read_data_1_1_vector_1_1_centroid_1aff63e4a4aaf79b648868b8afea3e410e" kindref="member">cluster</ref>[customer].CustomerId)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>value<sp/>cant&apos;t<sp/>be<sp/>found<sp/>in<sp/>the<sp/>matrix<sp/>because<sp/>of<sp/>the<sp/>a&gt;<sp/>b<sp/>&amp;<sp/>b<sp/>&gt;<sp/>a<sp/>implementation,<sp/>flip<sp/>the<sp/>customer<sp/>and<sp/>the<sp/>other<sp/>customer<sp/>to<sp/>find<sp/>th<sp/>distance<sp/>value.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumdistance<sp/>+=<sp/><ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_sillhouette_1ab21ef51218b8a622d27881256a3d5aa5" kindref="member">Distance_Matrix</ref>[tempCentroidList[i].cluster[other_customer].CustomerId]<sp/>[centroid.<ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_read_data_1_1_vector_1_1_centroid_1aff63e4a4aaf79b648868b8afea3e410e" kindref="member">cluster</ref>[customer].CustomerId];<sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumdistance<sp/>+=<sp/><ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_sillhouette_1ab21ef51218b8a622d27881256a3d5aa5" kindref="member">Distance_Matrix</ref>[centroid.<ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_read_data_1_1_vector_1_1_centroid_1aff63e4a4aaf79b648868b8afea3e410e" kindref="member">cluster</ref>[customer].CustomerId]<sp/>[tempCentroidList[i].cluster[other_customer].CustomerId];</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>the<sp/>accumulated<sp/>results<sp/>to<sp/>the<sp/>list<sp/>of<sp/>neighbours<sp/>of<sp/>the<sp/>customer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centroid.<ref refid="class_stefan_schmeltz_kmeans_clustering_d_t_a02_1_1_read_data_1_1_vector_1_1_centroid_1aff63e4a4aaf79b648868b8afea3e410e" kindref="member">cluster</ref>[customer].AddNeighbhour(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Tuple&lt;int,<sp/>double&gt;(tempCentroidList[i].Id,<sp/>sumdistance));<sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="StefanSchmeltzKmeansClusteringDTA02/Sillhouette/Sillhouette.cs"/>
  </compounddef>
</doxygen>
